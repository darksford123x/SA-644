// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// DevicesColumns holds the columns for the "devices" table.
	DevicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "dname", Type: field.TypeString, Unique: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// DevicesTable holds the schema information for the "devices" table.
	DevicesTable = &schema.Table{
		Name:       "devices",
		Columns:    DevicesColumns,
		PrimaryKey: []*schema.Column{DevicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "devices_users_device",
				Columns: []*schema.Column{DevicesColumns[2]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RepairInvoicesColumns holds the columns for the "repair_invoices" table.
	RepairInvoicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "rename", Type: field.TypeString, Unique: true},
		{Name: "device_id", Type: field.TypeInt, Nullable: true},
		{Name: "statusr_id", Type: field.TypeInt, Nullable: true},
		{Name: "symptom_id", Type: field.TypeInt, Nullable: true},
	}
	// RepairInvoicesTable holds the schema information for the "repair_invoices" table.
	RepairInvoicesTable = &schema.Table{
		Name:       "repair_invoices",
		Columns:    RepairInvoicesColumns,
		PrimaryKey: []*schema.Column{RepairInvoicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "repair_invoices_devices_repair_information",
				Columns: []*schema.Column{RepairInvoicesColumns[2]},

				RefColumns: []*schema.Column{DevicesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "repair_invoices_status_rs_repair_information",
				Columns: []*schema.Column{RepairInvoicesColumns[3]},

				RefColumns: []*schema.Column{StatusRsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "repair_invoices_symptoms_repair_information",
				Columns: []*schema.Column{RepairInvoicesColumns[4]},

				RefColumns: []*schema.Column{SymptomsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StatusRsColumns holds the columns for the "status_rs" table.
	StatusRsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "sname", Type: field.TypeString},
	}
	// StatusRsTable holds the schema information for the "status_rs" table.
	StatusRsTable = &schema.Table{
		Name:        "status_rs",
		Columns:     StatusRsColumns,
		PrimaryKey:  []*schema.Column{StatusRsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// SymptomsColumns holds the columns for the "symptoms" table.
	SymptomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "syname", Type: field.TypeString},
	}
	// SymptomsTable holds the schema information for the "symptoms" table.
	SymptomsTable = &schema.Table{
		Name:        "symptoms",
		Columns:     SymptomsColumns,
		PrimaryKey:  []*schema.Column{SymptomsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uname", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DevicesTable,
		RepairInvoicesTable,
		StatusRsTable,
		SymptomsTable,
		UsersTable,
	}
)

func init() {
	DevicesTable.ForeignKeys[0].RefTable = UsersTable
	RepairInvoicesTable.ForeignKeys[0].RefTable = DevicesTable
	RepairInvoicesTable.ForeignKeys[1].RefTable = StatusRsTable
	RepairInvoicesTable.ForeignKeys[2].RefTable = SymptomsTable
}
